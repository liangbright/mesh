# -*- coding: utf-8 -*-
'''
Created on Thu Mar 16 21:54:53 2023

@author: liang
'''

import torch
#%%
def save_polygon_mesh_to_inp(mesh, filename):
    #quad or tri shell element
    #----------------------------------------
    inp=[]
    inp.append('** ABAQUS Input Deck Generated by mesh/save_polygon_mesh_to_inp' +'\n')
    inp.append('*Part, name = PART-1'+'\n')
    #------------------------------------------ Part ------------------------------------------------------------------
    inp.append('*NODE' + '\n')
    for k in range(0, mesh.node.shape[0]):
        pos=mesh.node[k,:]
        inp.append(str(k+1)+', '+str(float(pos[0]))+', '+str(float(pos[1]))+', '+str(float(pos[2]))+'\n')
    element_type_prev=None
    for k in range(0, len(mesh.element)):
        e=mesh.element[k]
        if len(e) == 3:
            element_type='S3'
        elif len(e) == 4:
            element_type='S4'
        else:
            raise ValueError('not supported element:'+str(k))
        if element_type != element_type_prev:
            inp.append('*ELEMENT, TYPE = '+element_type+'\n')
        line=str(k+1)
        for m in range(0, len(e)):
            line=line+', '+str(int(e[m])+1)
        line=line+'\n'
        inp.append(line)
        element_type_prev=element_type
    inp.append('*End Part' + '\n')
    with open(filename, 'w') as file:
        file.writelines(inp)
#%%
def save_polyhedron_mesh_to_inp(mesh, filename):
    #C3D8, C3D6, or C3D4 element
    #----------------------------------------
    inp=[]
    inp.append('** ABAQUS Input Deck Generated by mesh/save_polyhedron_mesh_to_inp' +'\n')
    inp.append('*Part, name = PART-1'+'\n')
    #------------------------------------------ Part ------------------------------------------------------------------
    inp.append('*NODE' + '\n')
    for k in range(0, mesh.node.shape[0]):
        pos=mesh.node[k,:]
        inp.append(str(k+1)+', '+str(float(pos[0]))+', '+str(float(pos[1]))+', '+str(float(pos[2]))+'\n')
    element_type_prev=None
    for k in range(0, len(mesh.element)):
        e=mesh.element[k]
        if len(e) == 4:
            element_type='C3D4'
        elif len(e) == 6:
            element_type='C3D6'
        elif len(e) == 8:
            element_type='C3D8'
        elif len(e) == 10:
            element_type='C3D10'
        else:
            raise ValueError('not supported element:'+str(k))
        if element_type != element_type_prev:
            inp.append('*ELEMENT, TYPE = '+element_type+'\n')
        line=str(k+1)
        for m in range(0, len(e)):
            line=line+', '+str(int(e[m])+1)
        line=line+'\n'
        inp.append(line)
        element_type_prev=element_type
    inp.append('*End Part' + '\n')
    with open(filename, 'w') as file:
        file.writelines(inp)